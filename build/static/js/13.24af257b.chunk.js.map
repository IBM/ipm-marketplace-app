{"version":3,"sources":["components/Quote/QuoteComponent.js","components/Layout/Container/ContainerComponent.js"],"names":["hostname","window","location","origin","QuoteComponent","props","searchParams","URLSearchParams","search","ipmConfigID","get","backLink","useState","status","msg","loading","setLoader","config","setConfig","message","infoObj","setInfo","loaderProps","active","withOverlay","small","description","className","headers","Authorization","cookies","list","split","forEach","cookie","parts","shift","trim","decodeURI","join","parseCookies","document","jwttoken","useEffect","getData","host","axios","then","response","data","errorMessage","resetInfo","catch","error","finally","closeLoader","info","hasOwnProperty","orderReferenceNumber","renderStatusMessages","errorCode","md","light","inline","onClick","assign","handleRedirectBack","backLinkProps","contacts","sm","lg","firstName","lastName","email","provisioning","Object","keys","map","provisionField","index","key","billing","terms","title","items","item","partIdentifier","attributes","item_qty","pricingEstimate","debit","partnerExtendedPrice","suggestedEndCustomerPrice","credit","currency","totalPrice","disabled","tooltipAlignment","style","float","url","sessionStorage","getItem","post","handleCreateOrder","buttonProps","ContainerComponent","fullWidth","children"],"mappings":"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","file":"static/js/13.24af257b.chunk.js","sourcesContent":["/*\n#\n# Copyright 2020- IBM Inc. All rights reserved\n# SPDX-License-Identifier: Apache2.0\n#\n*/\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Quote.css\";\nimport { ArrowLeft32 } from \"@carbon/icons-react\";\nimport { Loading } from \"carbon-components-react\";\nimport {\n  Grid,\n  Row,\n  Column,\n  Button,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableContainer,\n  TableBody,\n  TableCell,\n  Tile,\n  Link,\n} from \"carbon-components-react\";\nimport ContainerComponent from \"./../Layout/Container/ContainerComponent\";\n\nconst parseCookies = (cookies) => {\n  let list = {};\n\n  cookies &&\n    cookies.split(\";\").forEach(function (cookie) {\n      const parts = cookie.split(\"=\");\n      list[parts.shift().trim()] = decodeURI(parts.join(\"=\"));\n    });\n\n  return list;\n};\n\nconst hostname =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3000\"\n    : window.location.origin;\n\nexport default function QuoteComponent(props) {\n  const searchParams = new URLSearchParams(props.location.search);\n  const ipmConfigID = searchParams.get(\"ipmConfigID\");\n  const backLink = searchParams.get(\"back\");\n\n  const [loading, setLoader] = useState({\n    status: true,\n    msg: \"Preparing quote... please wait! \",\n  });\n  const [config, setConfig] = useState({});\n  const [infoObj, setInfo] = useState({ status: null, message: \"\" });\n\n  const loaderProps = {\n    active: true,\n    withOverlay: true,\n    small: false,\n    description: \"Loader\",\n    className: \"loader\",\n  };\n\n  const cookies = parseCookies(document.cookie);\n  const { jwttoken } = cookies;\n\n  const headers = {\n    Authorization: \"Bearer \" + jwttoken,\n  };\n\n  useEffect(() => {\n    getData(hostname);\n  }, []);\n\n  const getData = (host) => {\n    axios\n      .get(`${host}/partner/quote/data?ipmConfigID=` + ipmConfigID, {\n        headers,\n      })\n      .then((response) => {\n        if (response.data.errorMessage) {\n          setInfo({\n            status: \"error\",\n            message: response.data.errorMessage,\n            data: response.data,\n          });\n        } else {\n          resetInfo();\n          setConfig(response.data);\n        }\n      })\n      .catch((error) => {\n        setInfo({\n          status: \"error\",\n          message: error.response.data?.errorMessage ? error.response.data.errorMessage : \"Something went wrong!\",\n          data: error,\n        });\n      })\n      .finally(() => {\n        closeLoader();\n      });\n  };\n\n  const closeLoader = () => {\n    setLoader({ status: false, msg: \"\" });\n  };\n\n  const resetInfo = () => {\n    setInfo({\n      status: null,\n      message: \"\",\n      data: null,\n    });\n  };\n\n  const handleCreateOrder = (ipmConfigID) => {\n    setLoader({ status: true, msg: \"Creating order... please wait!\" });\n\n    let url = `${hostname}/partner/product/order/${ipmConfigID}`;\n    const orderReferenceNumber = sessionStorage.getItem('or');\n\n    if (orderReferenceNumber) {\n      url = `${url}/${orderReferenceNumber}`\n    }\n\n    axios\n      .post(url, {\n        headers,\n      })\n      .then((response) => {\n        if (response.data.errorMessage) {\n          setInfo({\n            status: \"error\",\n            message: response.data.errorMessage,\n            data: response.data,\n          });\n        } else {\n          setInfo({\n            status: \"success\",\n            message: response.data.message,\n            data: response.data,\n          });\n        }\n      })\n      .catch((error) => {\n        setInfo({\n          status: \"error\",\n          message: error.response.data?.errorMessage ? error.response.data.errorMessage : \"Something went wrong!\",\n          data: error,\n        });\n      })\n      .finally(() => {\n        closeLoader();\n      });\n  };\n\n  const handleRedirectBack = (backLink) => {\n      //redirect back\n      window.location.assign(backLink);\n  };\n\n  const buttonProps = (ipmConfigID) => {\n    return {\n      disabled: infoObj.status,\n      tooltipAlignment: \"center\",\n      style: { float: \"right\" },\n      onClick: () => handleCreateOrder(ipmConfigID),\n    };\n  };\n\n  const backLinkProps = (backLink) => {\n    return {\n      className: \"back--link\",\n      inline: true,\n      onClick: () => handleRedirectBack(backLink),\n    };\n  };\n\n  const renderStatusMessages = (info) => {\n    if (info.status) {\n      switch (true) {\n        case info.data.hasOwnProperty(\"orderReferenceNumber\"):\n          return (\n            <div className={`${info.status}--status info--section`}>\n              <span>\n                Order number {info.data.orderReferenceNumber} has been created\n                succesfully!\n              </span>\n            </div>\n          );\n        default:\n          return (\n            <div className={`${info.status}--status info--section`}>\n              <span>{info.message}</span>\n            </div>\n          );\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <ContainerComponent>\n      <div className=\"margin-top25\">\n        <h3 className=\"quote--title\">\n          {loading.status ? loading.msg : \"Quote\"}\n        </h3>\n      </div>\n      {renderStatusMessages(infoObj)}\n      {loading.status ? (\n        <Loading {...loaderProps} />\n      ) : infoObj.data?.errorCode === \"MP1808E\" ? null : (\n        <Grid>\n          {backLink ? <Row>\n            <Column md={12} className=\"margin-top25\">\n              <Tile light={true}>\n                <Link {...backLinkProps(backLink)}>\n                  <ArrowLeft32 />\n                  <span>Back</span>\n                </Link>\n              </Tile>\n            </Column>\n          </Row> : null}\n          \n          {config.contacts ? (\n            <Row>\n              <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                <Tile>\n                  <h4>Contact</h4>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>\n                    Name:{\" \"}\n                    {config.contacts.firstName + \" \" + config.contacts.lastName}\n                  </span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Email: {config.contacts.email} </span>\n                </Tile>\n              </Column>\n            </Row>\n          ) : null}\n\n          <>\n            {config.provisioning ? (\n              <Row>\n                <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                  <Tile>\n                    <h4>Provision Details</h4>\n                  </Tile>\n                </Column>\n                {Object.keys(config.provisioning).map(\n                  (provisionField, index) => (\n                    <Column md={2} key={index}>\n                      <Tile light={true}>\n                        <span>\n                          {provisionField}:{config.provisioning[provisionField]}\n                        </span>\n                      </Tile>\n                    </Column>\n                  )\n                )}\n              </Row>\n            ) : null}\n            <Row>\n              <Column sm={12} md={12} lg={12} className=\"margin-top25\">\n                <Tile>\n                  <h4>Other Details</h4>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>IPM Config ID: {config.ipmConfigID}</span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Billing Terms: {config.billing}</span>\n                </Tile>\n              </Column>\n              <Column md={2}>\n                <Tile light={true}>\n                  <span>Subscription Terms: {config.terms}</span>\n                </Tile>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <TableContainer className=\"margin-top25\" title=\"Summary\">\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableHeader>ID</TableHeader>\n                        <TableHeader>Quantity</TableHeader>\n                        <TableHeader>Partner Debit Price</TableHeader>\n                        <TableHeader>Customer Debit Price</TableHeader>\n                        <TableHeader>Customer Credit Price</TableHeader>\n                        <TableHeader>Price</TableHeader>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {config.items?.map((item, index) => (\n                        <TableRow key={index}>\n                          <TableCell>{item.partIdentifier}</TableCell>\n                          <TableCell>{item.attributes.item_qty}</TableCell>\n                          <TableCell>{item.pricingEstimate?.debit.partnerExtendedPrice}</TableCell>\n                          <TableCell>{item.pricingEstimate?.debit.suggestedEndCustomerPrice}</TableCell>\n                          <TableCell>{item.pricingEstimate?.credit.partnerExtendedPrice}</TableCell>\n                          <TableCell>\n                            {item.pricingEstimate?.debit\n                              .suggestedEndCustomerPrice\n                              ? item.pricingEstimate.debit\n                                  .suggestedEndCustomerPrice +\n                                \" \" +\n                                config.currency\n                              : \"Free\"}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Column>\n            </Row>\n            <Row className=\"margin-top25\">\n              <Column lg={8}></Column>\n              <Column lg={2}>\n                <span className=\"total--price\">\n                  Total price: {config.totalPrice} {config.currency}\n                </span>\n              </Column>\n              <Column lg={2}>\n                <Button {...buttonProps(ipmConfigID)}>Create Order</Button>\n              </Column>\n            </Row>\n          </>\n        </Grid>\n      )}\n    </ContainerComponent>\n  );\n}\n","/*\n#\n# Copyright 2020- IBM Inc. All rights reserved\n# SPDX-License-Identifier: Apache2.0\n#\n*/\nimport React from \"react\";\nimport { Grid } from \"carbon-components-react\";\nimport \"./Container.scss\";\n\nexport default function ContainerComponent(props) {\n  const { fullWidth } = props;\n\n  return (\n    <Grid fullWidth={fullWidth} className=\"container\">\n      {props.children}\n    </Grid>\n  );\n}\n"],"sourceRoot":""}